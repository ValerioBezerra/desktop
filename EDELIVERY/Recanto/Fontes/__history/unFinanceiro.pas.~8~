unit unFinanceiro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids,
  Vcl.ComCtrls, Vcl.ExtCtrls;

type
  TfrmFinanceiro = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    edCOD_CLI: TEdit;
    Label1: TLabel;
    Button1: TButton;
    edNOME_CLI: TEdit;
    DateTimePicker1: TDateTimePicker;
    DateTimePicker2: TDateTimePicker;
    DBGrid1: TDBGrid;
    RadioGroup1: TRadioGroup;
    Button2: TButton;
    procedure edCOD_CLIExit(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmFinanceiro: TfrmFinanceiro;

implementation

{$R *.dfm}

uses unDM, unConsCLIENTE;

procedure TfrmFinanceiro.Button1Click(Sender: TObject);
begin

                   Application.CreateForm(TFmrconscliente,Fmrconscliente);
     Fmrconscliente.ShowModal;
     if not DataModule1.cdsCLIENTE.IsEmpty then
     begin
          edCOD_CLI.Text := DataModule1.cdsCLIENTE.FieldByName('COD_CLI').AsString;
          edCOD_CLIExit(Self);

     end;
end;

procedure TfrmFinanceiro.edCOD_CLIExit(Sender: TObject);
begin
        with DataModule1.cdsCONSULTA do
     begin
       close;
       CommandText := 'select * from cliente where cod_cli = ' + edCOD_CLI.Text;
       Open;
       if not IsEmpty then
          edNOME_CLI.Text := FieldByName('NOME_cli').AsString
       else
           edNome_Cli.Text  := 'Cliente não cadastrado';
     end;
end;

end.
